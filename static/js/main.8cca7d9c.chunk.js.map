{"version":3,"sources":["icons/me.png","icons/github.svg","icons/linkedin.svg","icons/medium.svg","Header.js","OutsideLinks.js","AboutMe.js","Projects.js","Employment.js","Education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","PureComponent","OutsideLinks","href","target","rel","src","githubLogo","alt","linkedinLogo","mediumLogo","componentName","meImg","src_OutsideLinks_0","Projects","projectEntries","title","description","code_link","live_link","forEach","proj","push","this","Empmloyment","employmentEntries","company_link","Education","education","degree","timespan","start","moment","end","schoolNames","school","i","length","classNamem","format","App","src_Header_0","AboutMe_componentName","Projects_Projects","Employment_Empmloyment","Education_Education","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cca7d9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.6b3c6b93.png\";","module.exports = __webpack_public_path__ + \"static/media/github.b2b2c888.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.984835fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.d906ee46.svg\";","import React, { PureComponent } from 'react';\nimport './Header.css';\n\nclass Header extends PureComponent {\n  render() {\n    return (\n      <header className='header'>\n        <t1>Evan Chrisinger</t1>\n        <p className='brief'>Software Engineering & Stuff</p>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { PureComponent } from 'react';\nimport githubLogo from './icons/github.svg';\nimport linkedinLogo from './icons/linkedin.svg';\nimport mediumLogo from './icons/medium.svg';\nimport './OutsideLinks.css';\n\nclass OutsideLinks extends PureComponent {\n  render() {\n    return (\n      <div className=\"social-links-container\">\n        <a\n          className=\"social-link\"\n          href=\"https://github.com/echrisinger\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={githubLogo} alt=\"github\"/>\n        </a>\n        <a\n          className=\"social-link\"\n          href=\"https://linkedin.com/in/echrisinger\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={linkedinLogo} alt=\"linkedin\"/>\n        </a>\n        <a\n          className=\"social-link\"\n          href=\"https://medium.com/@evanchrisinger\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={mediumLogo} alt=\"medium\"/>\n        </a>\n      </div>\n    )\n  }\n}\n\nexport default OutsideLinks;\n","import React, { PureComponent } from 'react';\nimport './AboutMe.css';\nimport meImg from './icons/me.png';\nimport OutsideLinks from './OutsideLinks';\n\nexport default class componentName extends PureComponent {\n  render() {\n    return (\n      <div>\n        <div className='section-container'>\n          <div className='personal-photo-container'>\n            <hr/>\n            <div className='img-container'>\n              <img src={meImg} alt='Image of Evan!'/>\n            </div>\n            <hr/>\n          </div>\n        </div>\n        <div className='about-me-flex-container'>\n          <div className='section-container'>\n            <div className='section-title'><t3>Suh dude!</t3></div>\n            <div className='about-me-container'>\n              <p>\n                My name is Evan.<br/>\n                I'm a backend engineer @ Transfix in NYC.<br/>\n                Outside of work I surf, ski, travel & adventure whenever I can.<br/>\n              </p>\n            </div>\n          </div>\n          <OutsideLinks/>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport './Section.css';\n\nexport default class Projects extends PureComponent {\n  projectEntries = () => {\n    const projectDetails = [{\n      title: 'Surf Counter',\n      description: 'Surf Counter supplies surfers with information on daily crowds at their favorite waves, with historical context. It scrapes Surfline for new cams, takes screenshots of daytime video feeds, and applies an OpenCV model to determine the number of surfers in the water at a time.',\n      code_link: 'https://github.com/echrisinger/surf-counter',\n      live_link: null\n    }];\n\n    let projectEntries = []\n    projectDetails.forEach(proj => {\n      projectEntries.push(\n        <div className='section-entry'>\n          <div className='entry-brief-container'>\n            <t4 className='entry-title'>{proj.title}</t4><br/>\n            <div className='entry-info'>\n              {proj.code_link ? <a href={proj.code_link}>Source Code</a> : null}\n              {proj.live_link ? <a href={proj.live_link}>Live</a> : null }\n            </div>\n          </div>\n          <p className='entry-description'>{proj.description}</p>\n        </div>\n      )\n    })\n    return(\n      <div className='section-entries-container'>\n        {projectEntries}\n      </div>\n    );\n  }\n\n  render() {\n    const projectEntries = this.projectEntries();\n    return (\n      <div className='section-container'>\n        <div className='section-title'><t3>Projects</t3></div>\n        {projectEntries}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './Section.css';\n\nexport default class Empmloyment extends PureComponent {\n  employmentEntries = () => {\n    const employmentDetails = [\n      {\n        title: 'Transfix',\n        description: \"Transfix is a digital freight brokerage working with some of America's largest brands. I have primarily worked on our internal and external API & automating communications protocols with our largest shippers.\",\n        company_link: 'https://transfix.io/'\n      },\n      {\n        title: 'Voodoo Mfg.',\n        description: 'Voodoo Manufacturing is the first automated factory of 3D printers in the world. In my internship, I implemented a factory scheduler, which took a list of models with associated pickup dates and created an optimal solution using a modification of the RED algorithm.',\n        company_link: 'https://voodoomfg.com/'\n      }\n    ];\n\n    let employmentEntries = [];\n    employmentDetails.forEach(proj => {\n      employmentEntries.push(\n        <div className='section-entry'>\n          <div className='entry-brief-container'>\n            <t4 className='entry-title'>{proj.title}</t4><br/>\n            <div className='entry-info'>\n              {proj.company_link ? <a href={proj.company_link}>Website</a> : null}\n            </div>\n          </div>\n          <p className='entry-description'>{proj.description}</p>\n        </div>\n      )\n    })\n    return(\n      <div className='section-entries-container'>\n        {employmentEntries}\n      </div>\n    );\n  }\n\n  render() {\n    const employmentEntries = this.employmentEntries();\n\n    return (\n      <div className='section-container'>\n        <t3 className='section-header'>Employment</t3>\n        {employmentEntries}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\n\nexport default class Education extends PureComponent {\n  render() {\n    const education = {\n      title: ['Harvey Mudd', 'Claremont McKenna'],\n      degree: 'Bachelors of Computer Science',\n      description: 'Studied Computer Science at Harvey Mudd College, outside Los Angeles, California. My later studies almost entirely focuesed on academic & engineering oriented Computer Science. Early in my education I excelled in Organic Chemistry & Mathematics. The analytical overlaps of these disciplines are fairly similar, and something I hope to return to in the future.',\n      timespan: {\n        start: moment('2015-09-01'),\n        end: moment('2018-05-13')\n      }\n    };\n\n    let schoolNames = [];\n    education.title.forEach((school, i) => {\n      schoolNames.push(<div><t4 className='entry-title'>{school}{i !== education.title.length-1 ? ',' : null}</t4><br/></div>)\n    });\n\n    return (\n      <div classNamem='section-container'>\n        <t3 className='section-title'>Education</t3>\n        <div className='section-entry'>\n          <div className='entry-brief-container'>\n            {schoolNames}\n            <div className='entry-info'>\n              {education.timespan.start.format('Y')}-{education.timespan.end.format('Y')}\n            </div>\n          </div>\n          <p className='entry-description'>{education.description}</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport AboutMe from './AboutMe';\nimport Projects from './Projects';\nimport Employment from './Employment';\nimport Education from './Education';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div className=\"background\">\n        <div className=\"information-container\">\n          <Header/>\n          <AboutMe/>\n          <Projects/>\n          <Employment/>\n          <Education/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}